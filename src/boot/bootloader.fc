nop nop

// How to load a static variable using pc-relative addressing:
// Move constant 1 into X10:
ONE X10
MSR CPSR_AE, XZR // Disable Memory Alignment
LDPC; // X30 = PC
LDRSW X1, [X30, 44] // X1 = MEM[PC + ALIGN32(11)]
MSR CPSR_AE, X10 // Enable Memory Alignment

// Set up Interrupt Vector:
MOVI X0, interrupt_vect
ALIGN32 X0 // Align the interrupt vector's address by 32 bits
NOP
LIVP X0

// Enable MMU / Virtual Memory / Paging:
MSR CPSR_PG, X10

// Enable Interrupts:
MSR CPSR_IEN0, X10

// Execute Software Interrupt 0:
SINT 0
HALT

// The Interrupt Vector starts here:
interrupt_vect:
NOP
RETI